{"remainingRequest":"/Users/n3r0/Documents/www/TesteHubster/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/n3r0/Documents/www/TesteHubster/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/n3r0/Documents/www/TesteHubster/src/App.vue","mtime":1570133189000},{"path":"/Users/n3r0/Documents/www/TesteHubster/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/n3r0/Documents/www/TesteHubster/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/n3r0/Documents/www/TesteHubster/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/n3r0/Documents/www/TesteHubster/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Categories from './components/Categories';\nimport Result from './components/Result';\nimport Cart from './components/Cart'\nimport axios from 'axios';\n\nexport default {\n  name: 'app',\n  components: {\n    Categories,\n    Result,\n    Cart\n  },\n  data(){\n    return{\n      categories: [],\n      products: [],\n      resultSearch: [],\n      cartProducts: [],\n      totalSumCartProducts: 0,\n      searchTerm: '',\n      currentCategory: 0\n    }\n  },\n  mounted(){\n    let app = this;\n    app.listCategories();\n    app.listProducts();\n  },\n  methods:{\n    async listCategories(){\n      let app = this;\n      try {\n        let response = await axios.get('http://5d556e6936ad770014cce06d.mockapi.io/api/v1/catalog/products');\n        app.categories = response.data.categories;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async listProducts(){\n      let app = this;\n      try {\n        let response = await axios.get('http://5d556e6936ad770014cce06d.mockapi.io/api/v1/catalog/products');\n        app.products = response.data.products;\n        app.resultSearch = response.data.products;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async searchProductsByTerm(){\n      let app = this;\n      app.currentCategory = 0;\n      app.resultSearch = [];\n      for(var i = 0; i < app.products.length; i++){\n        if(app.products[i].name.toLowerCase().match(app.searchTerm.toLowerCase())){\n          app.resultSearch.push(app.products[i]);\n        }\n      }\n    },\n    async searchProductsByCategory(){\n      let app = this;\n      let category = app.currentCategory;\n      app.resultSearch = [];\n      for(var i = 0; i < app.products.length; i++){\n        if(app.products[i].category.id == category){\n          app.resultSearch.push(app.products[i]);\n        }\n      }\n    },\n    async insertProductInCart(data){\n      let app = this;\n      let product = data.id;\n      //VERIFICA SE PRODUTO JÁ ESTÁ NO CARRINHO\n      let cartProductsIsNull = 0;\n      for(var j = 0; j < app.cartProducts.length; j++){\n        if (app.cartProducts[j].id == product) {\n          cartProductsIsNull = 1;\n        }\n      }\n\n      if(cartProductsIsNull != 0){\n        for(var k = 0; k < app.cartProducts.length; k++){\n          if (app.cartProducts[k].id == product) {\n            app.cartProducts[k].qnt = app.cartProducts[k].qnt + 1; \n          }\n        }\n      }else{\n        for(var i = 0; i < app.products.length; i++){\n\n          if(app.products[i].id == product){\n            let data = {\n              id: app.products[i].id,\n              name: app.products[i].name,\n              salePrice: app.products[i].salePrice,\n              qnt: 1,\n            }\n            app.cartProducts.push(data);\n          }\n          \n        }\n      }\n\n      app.sumCartProducts();\n\n            \n    },\n    sumCartProducts(){\n      let app = this;\n      let total = 0;\n      for(var i = 0; i < app.cartProducts.length; i++){\n        total = total+(app.cartProducts[i].qnt*app.cartProducts[i].salePrice);\n      }\n      app.totalSumCartProducts = total;\n    },\n    setCurrentCategory(data){\n      let app = this;\n      app.currentCategory = data.id;\n      app.searchProductsByCategory();\n    },\n    removeItemCart(data){\n      let app = this;\n      let id = data.id;\n\n      for(var i = 0; i < app.cartProducts.length; i++){\n        if (app.cartProducts[i].id == id) {\n          if (app.cartProducts[i].qnt == 1) {\n            app.cartProducts[0].splice(i);\n            //console.log(app.cartProducts)\n          }else{\n            app.cartProducts[i].qnt = app.cartProducts[i].qnt - 1;\n          }\n        }\n      }\n\n      app.sumCartProducts();\n\n    },\n    finalizeSale(){\n      let app = this;\n      app.totalSumCartProducts = 0;\n      app.cartProducts = [];\n      toastr.success('Venda Finalizada com Sucesso!');\n    }\n  }\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"row\">\n      <div class=\"col-md-2\"></div>\n      <div class=\"col-md-4\">\n        <input type=\"text\" placeholder=\"Pesquisar produto\" v-model=\"searchTerm\" @keyup=\"searchProductsByTerm\">\n      </div>\n      <div class=\"col-md-2\"></div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-2\">\n        <Categories\n          :categories=\"categories\"\n          :currentCategory=\"currentCategory\"\n          @setCurrentCategory=\"setCurrentCategory\"\n        />\n      </div>\n      <div class=\"col-md-5\">\n        <Result \n          :products=\"resultSearch\"\n          @insertProductInCart=\"insertProductInCart\"\n        />\n      </div>\n      <div class=\"col-md-3\">\n        <Cart\n          :cartProducts='cartProducts'\n          :totalSumCartProducts='totalSumCartProducts'\n          @finalizeSale='finalizeSale'\n          @removeItemCart='removeItemCart'\n        />\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        \n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Categories from './components/Categories';\nimport Result from './components/Result';\nimport Cart from './components/Cart'\nimport axios from 'axios';\n\nexport default {\n  name: 'app',\n  components: {\n    Categories,\n    Result,\n    Cart\n  },\n  data(){\n    return{\n      categories: [],\n      products: [],\n      resultSearch: [],\n      cartProducts: [],\n      totalSumCartProducts: 0,\n      searchTerm: '',\n      currentCategory: 0\n    }\n  },\n  mounted(){\n    let app = this;\n    app.listCategories();\n    app.listProducts();\n  },\n  methods:{\n    async listCategories(){\n      let app = this;\n      try {\n        let response = await axios.get('http://5d556e6936ad770014cce06d.mockapi.io/api/v1/catalog/products');\n        app.categories = response.data.categories;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async listProducts(){\n      let app = this;\n      try {\n        let response = await axios.get('http://5d556e6936ad770014cce06d.mockapi.io/api/v1/catalog/products');\n        app.products = response.data.products;\n        app.resultSearch = response.data.products;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async searchProductsByTerm(){\n      let app = this;\n      app.currentCategory = 0;\n      app.resultSearch = [];\n      for(var i = 0; i < app.products.length; i++){\n        if(app.products[i].name.toLowerCase().match(app.searchTerm.toLowerCase())){\n          app.resultSearch.push(app.products[i]);\n        }\n      }\n    },\n    async searchProductsByCategory(){\n      let app = this;\n      let category = app.currentCategory;\n      app.resultSearch = [];\n      for(var i = 0; i < app.products.length; i++){\n        if(app.products[i].category.id == category){\n          app.resultSearch.push(app.products[i]);\n        }\n      }\n    },\n    async insertProductInCart(data){\n      let app = this;\n      let product = data.id;\n      //VERIFICA SE PRODUTO JÁ ESTÁ NO CARRINHO\n      let cartProductsIsNull = 0;\n      for(var j = 0; j < app.cartProducts.length; j++){\n        if (app.cartProducts[j].id == product) {\n          cartProductsIsNull = 1;\n        }\n      }\n\n      if(cartProductsIsNull != 0){\n        for(var k = 0; k < app.cartProducts.length; k++){\n          if (app.cartProducts[k].id == product) {\n            app.cartProducts[k].qnt = app.cartProducts[k].qnt + 1; \n          }\n        }\n      }else{\n        for(var i = 0; i < app.products.length; i++){\n\n          if(app.products[i].id == product){\n            let data = {\n              id: app.products[i].id,\n              name: app.products[i].name,\n              salePrice: app.products[i].salePrice,\n              qnt: 1,\n            }\n            app.cartProducts.push(data);\n          }\n          \n        }\n      }\n\n      app.sumCartProducts();\n\n            \n    },\n    sumCartProducts(){\n      let app = this;\n      let total = 0;\n      for(var i = 0; i < app.cartProducts.length; i++){\n        total = total+(app.cartProducts[i].qnt*app.cartProducts[i].salePrice);\n      }\n      app.totalSumCartProducts = total;\n    },\n    setCurrentCategory(data){\n      let app = this;\n      app.currentCategory = data.id;\n      app.searchProductsByCategory();\n    },\n    removeItemCart(data){\n      let app = this;\n      let id = data.id;\n\n      for(var i = 0; i < app.cartProducts.length; i++){\n        if (app.cartProducts[i].id == id) {\n          if (app.cartProducts[i].qnt == 1) {\n            app.cartProducts[0].splice(i);\n            //console.log(app.cartProducts)\n          }else{\n            app.cartProducts[i].qnt = app.cartProducts[i].qnt - 1;\n          }\n        }\n      }\n\n      app.sumCartProducts();\n\n    },\n    finalizeSale(){\n      let app = this;\n      app.totalSumCartProducts = 0;\n      app.cartProducts = [];\n      toastr.success('Venda Finalizada com Sucesso!');\n    }\n  }\n}\n</script>\n\n<style scoped>\n.row {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n}\n.col-md-2{\n  width: 20%;\n}\n.col-md-5{\n  width: 50%;\n}\n.col-md-4{\n  width: 40%;\n}\n.col-md-3{\n  width: 30%;\n}\n.col-md-12{\n  width: 100%;\n}\ninput{\n  width: 100%;\n  height: 20px;\n  font-size: 12pt;\n}\n</style>\n"]}]}